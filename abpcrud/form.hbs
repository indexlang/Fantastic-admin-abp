<script lang="ts" setup>
import type { FormInstance, FormRules } from 'element-plus'
import { ElMessage } from 'element-plus'
import api from '@/api'

const props = defineProps({
  id: {
    type: [Number, String],
    default: '',
  },
})

const loading = ref(false)
const formRef = ref<FormInstance>()
const form = ref({
  id: props.id,
  {{#each swaggerjson}}
  {{this}}:'',
  {{/each}}
})
const formRules = ref<FormRules>({
  title: [
    { required: true, message: '请输入标题', trigger: 'blur' },
  ],
})

onMounted(() => {
  if (form.value.id !== '') {
    getInfo()
  }
})

function getInfo() {
  loading.value = true
  api.get(`{{url}}/${form.value.id}`, {}).then((res: any) => {
    loading.value = false
    {{#each swaggerjson}}
    form.value.{{this}} = res.{{this}}
    {{/each}}
  })
}

defineExpose({
  submit() {
    return new Promise<void>((resolve) => {
      if (form.value.id === '') {
        formRef.value && formRef.value.validate((valid) => {
          if (valid) {
            api.post('{{url}}/', form.value, {}).then(() => {
              ElMessage.success({
                message: '模拟新增成功',
                center: true,
              })
              resolve()
            })
          }
        })
      }
      else {
        formRef.value && formRef.value.validate((valid) => {
          if (valid) {
            api.put(`{{url}}/${form.value.id}`, form.value, {}).then(() => {
              ElMessage.success({
                message: '编辑成功',
                center: true,
              })
              resolve()
            })
          }
        })
      }
    })
  },
})
</script>

<template>
  <div v-loading="loading">
    <el-form ref="formRef" :model="form" :rules="formRules" label-width="120px" label-suffix="：">
{{#each createParas}}
      <el-form-item label="{{this.cname}}" prop="{{this.cname}}">
        <el-input v-model="form.{{this.name}}" placeholder="请输入{{this.cname}}" />
      </el-form-item>
  {{/each}}
    </el-form>
  </div>
</template>

<style lang="scss" scoped>
// scss
</style>
